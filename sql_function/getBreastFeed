CREATE OR REPLACE FUNCTION core.exclusivelyBreastFeed (dob varchar,childId varchar) 
RETURNS varchar
AS $$
    DECLARE json_object json;
    DECLARE item json;
    DECLARE val varchar = '';
    DECLARE returnVal varchar = 'Yes';
    DECLARE temprow RECORD;
    DECLARE totalSize int;
    BEGIN   
    FOR temprow IN 
        SELECT * FROM core.event e  
  	    WHERE e.json->>'eventType' ='Lactating Woman Counselling' 
        and cast(e.json->>'baseEntityId' as varchar) = childId and 
        DATE_PART('day', cast(e.json->>'eventDate' as varchar)::timestamp - dob::timestamp  )<=180
       
        LOOP
        	FOR item IN SELECT * FROM json_array_elements((temprow.json->>'obs')::json)
            LOOP
                IF (item->>'formSubmissionField') = 'additional_liquids_other_than_breastmilk' 
                THEN
                val = (item->>'values')::json->>0;                
                END IF;
            END LOOP;
        	IF val = 'Yes' 
        		THEN
        		return 'No';                
        	END IF;
        END LOOP;
   	totalSize = (SELECT count(*) FROM core.event e  
  	    WHERE e.json->>'eventType' ='Lactating Woman Counselling' 
        and cast(e.json->>'baseEntityId' as varchar) = childId and 
        DATE_PART('day', cast(e.json->>'eventDate' as varchar)::timestamp - dob::timestamp  )<=180);
    IF totalSize <= 0 
        THEN
        returnVal = 'No';                
    END IF;
    return returnVal;
  END;
  $$ LANGUAGE 'plpgsql';
  
select core.exclusivelyBreastFeed ('2018-02-3', '50bdcf1f-3cba-442b-94c9-ebbdeedc1469');