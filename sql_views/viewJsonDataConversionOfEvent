CREATE MATERIALIZED VIEW core."viewJsonDataConversionOfEvent"
AS
SELECT id
   , json->>'_id' as _id
   , json->>'baseEntityId' as base_entity_id
   , cast(json->>'dateCreated' as timestamp) as date_created
   , json->>'dateEdited' as date_edited
   , json->>'duration' as duration
   , json->>'entityType' as entity_type 
   , cast(json->>'eventDate' as Date) as event_date
   , json->>'eventType' as event_type
   , json->>'locationId' as location_id
   , json->>'obs' as observations
   , json->>'providerId' as provider_id
   , json->>'serverVersion' as server_version
   , CASE
    WHEN (json->>'eventType' = 'Lactating Woman Counselling') THEN cast(core.getobsvalue(id,'breastfeeding') as varchar)
	ELSE null
    END
	as breastfeeding 
    , CASE
    WHEN (json->>'eventType' = 'Lactating Woman Counselling') THEN cast(core.getobsvalue(id,'additional_liquids_other_than_breastmilk') as varchar)
	ELSE null
    END
	as additional_liquids_other_than_breastmilk 
   , CASE
    WHEN (json->>'eventType' = 'Lactating Woman Counselling') THEN cast(core.getobsvalue(id,'complimentary_amount') as varchar)
	ELSE null
    END 
    as complimentary_amount 
   , CASE
    WHEN (json->>'eventType' = 'Lactating Woman Counselling') THEN cast(core.getobsvalue(id,'lactating_counselling_actions_decided_previous_meeting') as varchar)
	ELSE null
    END
	as lactating_counselling_actions_decided_previous_meeting 
   , CASE
    WHEN (json->>'eventType' = 'Vaccination') THEN json->'obs'->1->'values'->>0
	ELSE null
    END
	as vaccination_name
   , CASE
    WHEN (json->>'entityType' = 'child') THEN json->'obs'->1->'values'->>0
	ELSE null
    END
	as birth_weight
   , CASE
    WHEN (json->>'entityType' = 'child') THEN json->'obs'->3->'values'->>0
	ELSE null
    END
	as mother_name
   ,  CASE
    WHEN ((json->>'eventType' = 'New Woman Member Registration')
	OR (json->>'eventType' = 'Woman Member Follow Up')) THEN cast(core.getObsValue(id, 'pregnant') as varchar)
	ELSE null
    END
	as is_pregnant
   ,  CASE
    WHEN (json->>'eventType' = 'New Woman Member Registration') THEN core.getObsValue(id, 'edd')
	ELSE null
    END
	as edd
   ,  CASE
    WHEN (json->>'eventType' = 'New Woman Member Registration') THEN core.getObsValue(id, 'lmp')
	ELSE null
    END
	as lmp
   , CASE
    WHEN (json->>'eventType' like '%Counselling%') THEN core.getObsValue(id, 'pregnant_counselling_actions_for_next_meeting')
	ELSE null
    END
	as pregnant_counselling_actions_for_next_meeting
   , CASE
    WHEN (json->>'eventType' = 'Woman Member Follow Up') THEN core.getObsValue(id, 'Visit_date')
	ELSE null
    END
	as follow_up_date
   , CASE
    WHEN (json->>'eventType' = 'Woman Member Follow Up') THEN core.getObsValue(id, 'Date_Of_next_appointment')
	ELSE null
    END
	as date_Of_next_appointment
   ,json->>'version' as version
   , CASE
    WHEN (json->>'eventType' like '%Counselling%') THEN json->'obs'->1->'values'->>0
	ELSE null
    END
	as woman_are_followed_counseling
   FROM core.event
WITH DATA;

GRANT ALL ON TABLE core."viewJsonDataConversionOfEvent" TO postgres;
GRANT ALL ON TABLE core."viewJsonDataConversionOfEvent" TO opensrp_admin;